openapi: 3.0.1
info:
  title: STD21082
  version: 1.0.0

servers:
- url: https://STD21082.com

tags:
- name: Students
- name: Courses
 
paths:
  /students:
    post:
      tags:
      - Students
      summary: Create New Students
      description: Create New Students From an Array
      
      requestBody:
        description: Students To Be Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
          
        required: true
      responses:
        200:
          description: List Of Students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudents'
      
        400:
          description: Bad Request
          content: {}
      
    get:
      tags:
      - Students
      summary: Gets All Students
      description: Get All Students with Details
      operationId: findStudentsByStatus
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: page_Size
        in: query
        required: true
        schema:
          type: integer
          
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      
        400:
          description: Bad Request
          content: {}
    put:
      tags:
      - Students
      summary: Updated Students
      operationId: updateStudents
      parameters:
      - in: query
        name: page-size
        description: Updated students object
        required: true
        schema:
          $ref: '#/components/schemas/Students'
      responses:
        400:
          description: Invalid studends supplied
        404:
          description: Students not found
    patch:
      tags:
      - Students
      summary: Updated modification with Students
      operationId: updateModificationStudents
      parameters:
      - in: query
        name: page-size
        description: Updated students object
        required: true
        schema:
          $ref: '#/components/schemas/Students'
      responses:
        400:
          description: Invalid studends supplied
        404:
          description: Students not found   
  /students/id:  
    get:
      tags:
      - Students
      summary: Gets All Students
      description: Get All Students with Details
      operationId: findStudentsById
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: page_Size
        in: query
        required: true
        schema:
          type: integer
          
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Students'
      
        400:
          description: Bad Request
          content: {}
    delete:
      tags:
      - Students
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors
      operationId: deleteOrder
      parameters:
      - name: OrderID
        in: query
        schema:
          type: integer
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Order not found 
          
  /Courses:
    post:
      tags:
      - Courses
      summary: Create New Courses
      description: Create New Courses From an Array
      
      requestBody:
        description: Courses To Be Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courses'
          
        required: true
      responses:
        200:
          description: List Of Courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      
        400:
          description: Bad Request
          content: {}
    get:
      tags:
      - Courses
      summary: Gets All Courses
      description: Get All Courses with Details
      operationId: findCoursesByStatus
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: page_Size
        in: query
        required: true
        schema:
          type: integer
          
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      
        400:
          description: Bad Request
          content: {}     
          
    put:
      tags:
      - Courses
      summary: Updated Courses
      operationId: updateCourses
      parameters:
      - in: query
        name: page-size
        description: Updated courses object
        required: true
        schema:
          $ref: '#/components/schemas/Courses'
      responses:
        400:
          description: Invalid Courses supplied
        404:
          description: Courses not found
          
    patch:
      tags:
      - Courses
      summary: Updated modification with Courses
      operationId: updateModificationCourses
      parameters:
      - in: query
        name: page-size
        description: Updated Courses object
        required: true
        schema:
          $ref: '#/components/schemas/Courses'
      responses:
        400:
          description: Invalid Courses supplied
        404:
          description: Courses not found        
  /Courses/id:
    get:
      tags:
      - Courses
      summary: Gets All Courses
      description: Get All Courses with Details
      operationId: findCoursesById
      parameters:
      - name: page
        in: query
        schema:
          type: integer
      - name: page_Size
        in: query
        required: true
        schema:
          type: integer
          
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courses'
      
        400:
          description: Bad Request
          content: {}
          
    delete:
      tags:
      - Courses
      summary: Delete All Courses
      description: Delete All Courses with Details
      parameters:
      - name: ID
        in: query
        schema:
          type: integer
      - name: Name
        in: query
        schema:
          type: integer
      - name: Teacher
        in: query
        schema:
          type: integer
      - name: Created Date
        in: query
        schema:
          type: integer
      responses:
        400:
          description: Invalid Courses supplied
        404:
          description: Courses not found
  
  
components:
  schemas:
    CreateStudents:
      type: object
      properties:
        name:
          type: string
          description: Order Status
      
    Students:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
        
    Courses:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: integer
      xml:
        name: Category    